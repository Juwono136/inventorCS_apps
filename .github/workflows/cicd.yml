name: InventorCS

on:
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"
  pull_request:
    branches:
      - master

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/inventorcs-backend:latest ./server
          docker push ${{ secrets.DOCKER_USERNAME }}/inventorcs-backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/inventorcs-frontend:latest ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/inventorcs-frontend:latest

  continuous-deployment:
    needs: continuous-integration
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Pull Latest Backend Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/inventorcs-backend:latest

      - name: Pull Latest Frontend Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/inventorcs-frontend:latest

      - name: Stop and Remove Old Containers
        run: |
          docker-compose down || true
          docker system prune -f

      - name: Run New Containers
        run: |
          docker-compose up -d
        env:
          PORT: ${{ secrets.PORT }}
          CONNECTION_URL: ${{ secrets.CONNECTION_URL }}
          DB_NAME: ${{ secrets.DB_NAME }}
          CLIENT_URL: ${{secrets.CLIENT_URL}}
          INTERNET_SERVER: ${{secrets.INTERNET_SERVER}}
          API_USERS_URL: ${{secrets.API_USERS_URL}}
          NODE_ENV: ${{secrets.NODE_ENV}}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          ACTIVATION_TOKEN_SECRET: ${{ secrets.ACTIVATION_TOKEN_SECRET }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          RABBITMQ_URL: ${{ secrets.RABBITMQ_URL }}

      - name: Add Containers to Tunnel
        run: |
          docker network connect ${{ secrets.TUNNEL_NAME }} inventorcs-backend || true
          docker network connect ${{ secrets.TUNNEL_NAME }} inventorcs-frontend || true
